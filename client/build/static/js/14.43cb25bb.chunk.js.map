{"version":3,"sources":["pages/user/register/style.module.scss","pages/user/register/RegisterForm.js","pages/user/register/index.js"],"names":["module","exports","login","title","block","inner","form","RegisterForm","es_form","create","state","isUploading","progress","loading","avatarURL","onSubmit","event","preventDefault","_this$props","_this","props","signUp","email","password","validateFields","error","values","message","Object","objectSpread2","console","log","handleUploadStart","setState","handleProgress","handleUploadError","handleUploadSuccess","filename","avatar","firebase","storage","ref","child","getDownloadURL","then","url","setTimeout","this","react_default","a","createElement","Helmet","className","concat","styles","layout","hideRequiredMark","row","col","span","Item","label","getFieldDecorator","initialValue","rules","required","input","size","type","style","width","height","color","margin","spin","spinning","src","alt","lib_default","accept","name","listType","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","display","es_button","htmlType","Component","connect","Register","handleTempEP","_this$props2","tempEP","register_RegisterForm","pattern","min","react_router_dom","to","user"],"mappings":"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","file":"static/js/14.43cb25bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"style_login__2kgFw\",\"title\":\"style_title__3GdJK\",\"block\":\"style_block__3ssDi\",\"inner\":\"style_inner__3Exdm\",\"form\":\"style_form__2zGc9\"};","import React, { Component } from 'react'\nimport { Form, Input, Button, message, Row, Col, Spin } from 'antd'\nimport { Helmet } from 'react-helmet'\nimport firebase from '../../../config/fbConfig'\nimport FileUploader from 'react-firebase-file-uploader'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../../redux/user/actions'\nimport Loader from 'components/LayoutComponents/Loader'\nimport styles from './style.module.scss'\n\n// function getBase64(img, callback) {\n//   const reader = new FileReader()\n//   reader.addEventListener('load', () => callback(reader.result))\n//   reader.readAsDataURL(img)\n// }\n\n// function beforeUpload(file) {\n//   const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\n//   if (!isJpgOrPng) {\n//     message.error('You can only upload JPG/PNG file!')\n//   }\n//   const isLt2M = file.size / 1024 / 1024 < 2\n//   if (!isLt2M) {\n//     message.error('Image must smaller than 2MB!')\n//   }\n//   return isJpgOrPng && isLt2M\n// }\n@Form.create()\nclass RegisterForm extends Component {\n  state = {\n    isUploading: false,\n    progress: 0,\n    loading: false,\n    avatarURL:\n      'https://firebasestorage.googleapis.com/v0/b/abstract-lane-269917.appspot.com/o/images%2F906aac0b-6844-4d3b-9f52-a4127b1b5b79.jpg?alt=media&token=423dbb46-43b0-4b43-9953-79a813ab344e',\n  }\n  onSubmit = event => {\n    event.preventDefault()\n    const { form, signUp, email, password } = this.props\n    form.validateFields((error, values) => {\n      if (!error) {\n        message.loading('Action in progress..', true)\n        values = { ...values, email, password, avatarURL: this.state.avatarURL }\n        console.log(values)\n        signUp(values)\n      }\n    })\n  }\n\n  handleUploadStart = () => {\n    this.setState({ isUploading: true, progress: 0 })\n  }\n  handleProgress = progress => this.setState({ progress })\n  handleUploadError = error => {\n    this.setState({ isUploading: false })\n  }\n  handleUploadSuccess = filename => {\n    this.setState({ avatar: filename, progress: 100 })\n    firebase\n      .storage()\n      .ref('images')\n      .child(filename)\n      .getDownloadURL()\n      .then(url => this.setState({ avatarURL: url }))\n    setTimeout(() => {\n      this.setState({ isUploading: false })\n    }, 1000)\n  }\n\n  render() {\n    const { form } = this.props\n\n    // const uploadButton = (\n    //   <div>\n    //     {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\n    //     <div className=\"ant-upload-text\">Upload</div>\n    //   </div>\n    // )\n\n    return (\n      <div>\n        <Helmet title=\"Register\" />\n        <div className={`${styles.title} login-heading`}>\n          <h1>\n            <strong>COMPLETE YOUR SIGNUP</strong>\n          </h1>\n          {/* <p>\n            Pluggable enterprise-level react application framework.\n            <br />\n            An excellent front-end solution for web applications built upon Ant Design and UmiJS.\n            <br />\n            Credentials for testing purposes - <strong>admin@mediatec.org</strong> /{' '}\n            <strong>cleanui</strong>\n          </p> */}\n        </div>\n        <div className={styles.block}>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <div className={styles.inner}>\n                <div className={styles.form}>\n                  <h4 className=\"text-uppercase\">\n                    <strong>Please log in</strong>\n                  </h4>\n                  <br />\n\n                  <Form layout=\"vertical\" hideRequiredMark onSubmit={this.onSubmit}>\n                    <Row>\n                      <Col span={12}>\n                        <Form.Item label=\"Name\">\n                          {form.getFieldDecorator('Name', {\n                            initialValue: '',\n                            rules: [\n                              {\n                                required: true,\n                                message: 'Please input your name',\n                              },\n                            ],\n                          })(<Input size=\"default\" />)}\n                        </Form.Item>\n                        <Form.Item label=\"Surname\">\n                          {form.getFieldDecorator('surname', {\n                            initialValue: '',\n                            rules: [\n                              {\n                                required: true,\n                                message: 'Please input your surname',\n                              },\n                            ],\n                          })(<Input size=\"default\" />)}\n                        </Form.Item>\n                        <Form.Item label=\"Title\">\n                          {form.getFieldDecorator('title', {\n                            initialValue: '',\n                            rules: [\n                              {\n                                required: true,\n                                message: 'Please input your title',\n                              },\n                            ],\n                          })(<Input size=\"default\" type=\"password\" />)}\n                        </Form.Item>\n                      </Col>\n                      <Col span={12}>\n                        <Form.Item label=\"Phone\">\n                          {form.getFieldDecorator('phone', {\n                            initialValue: '',\n                            rules: [\n                              {\n                                required: true,\n                                message: 'Please input your phone',\n                              },\n                            ],\n                          })(<Input size=\"default\" type=\"number\" />)}\n                        </Form.Item>\n                        <Form.Item label=\"Image\">\n                          <label>\n                            <div\n                              style={{\n                                width: 34,\n                                height: 34,\n                                color: '#fbd800',\n                                margin: '2px auto',\n                              }}\n                            >\n                              <Spin\n                                spinning={this.state.isUploading}\n                                style={{\n                                  width: '120px',\n                                  height: '120px',\n                                  margin: '0 auto',\n                                }}\n                              >\n                                <img\n                                  src={this.state.avatarURL}\n                                  // htmlFor=\"image\"\n                                  style={{\n                                    width: '120px',\n                                    height: '120px',\n\n                                    margin: '0 auto',\n                                  }}\n                                  alt=\"userIcon\"\n                                />\n                              </Spin>\n                            </div>\n                            <FileUploader\n                              accept=\"image/*\"\n                              name=\"avatar\"\n                              listType=\"picture-card\"\n                              className=\"avatar-uploader\"\n                              randomizeFilename\n                              storageRef={firebase.storage().ref('images')}\n                              onUploadStart={this.handleUploadStart}\n                              onUploadError={this.handleUploadError}\n                              onUploadSuccess={this.handleUploadSuccess}\n                              onProgress={this.handleProgress}\n                              style={{ width: '200px', display: 'none' }}\n                            />\n                            {/* <p className=\"label-low\" style={{ textAlign: 'center' }}>\n                          Upload Your Image\n                        </p> */}\n                          </label>\n                        </Form.Item>\n                      </Col>\n                    </Row>\n                    <div className=\"form-actions\">\n                      <Button type=\"primary\" className=\"width-150 mr-4\" htmlType=\"submit\">\n                        Sign Up\n                      </Button>\n                    </div>\n                    {/* <div className=\"form-group\">\n                      <p>Use another service to Log In</p>\n                      <div className=\"mt-2\">\n                        <a href=\"javascript: void(0);\" className=\"btn btn-icon mr-2\">\n                          <i className=\"icmn-facebook\" />\n                        </a>\n                        <a href=\"javascript: void(0);\" className=\"btn btn-icon mr-2\">\n                          <i className=\"icmn-google\" />\n                        </a>\n                        <a href=\"javascript: void(0);\" className=\"btn btn-icon mr-2\">\n                          <i className=\"icmn-windows\" />\n                        </a>\n                        <a href=\"javascript: void(0);\" className=\"btn btn-icon mr-2\">\n                          <i className=\"icmn-twitter\" />\n                        </a>\n                      </div>\n                    </div> */}\n                  </Form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, { signUp })(RegisterForm)\n","import React, { Component } from 'react'\nimport { Form, Input, Button, message } from 'antd'\nimport { Helmet } from 'react-helmet'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { handleTempEP } from '../../../redux/user/actions'\nimport RegisterForm from './RegisterForm'\nimport styles from './style.module.scss'\n\n@Form.create()\nclass Register extends Component {\n  onSubmit = event => {\n    event.preventDefault()\n    const { form, handleTempEP } = this.props\n    form.validateFields((error, values) => {\n      if (!error) {\n        message.loading('Action in progress..', true)\n        handleTempEP(values)\n      }\n      console.log(error)\n    })\n  }\n\n  render() {\n    const { form, tempEP } = this.props\n    if (tempEP) return <RegisterForm email={tempEP.email} password={tempEP.password} />\n    return (\n      <div>\n        <Helmet title=\"Login\" />\n        <div className={`${styles.title} login-heading`}>\n          <h1>\n            <strong>WELCOME TO CLEAN UI REACT - REACT REDUX ADMIN TEMPLATE</strong>\n          </h1>\n          <p>\n            Pluggable enterprise-level react application framework.\n            <br />\n            An excellent front-end solution for web applications built upon Ant Design and UmiJS.\n            <br />\n            Credentials for testing purposes - <strong>admin@mediatec.org</strong> /{' '}\n            <strong>cleanui</strong>\n          </p>\n        </div>\n        <div className={styles.block}>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <div className={styles.inner}>\n                <div className={styles.form}>\n                  <h4 className=\"text-uppercase\">\n                    <strong>Please log in</strong>\n                  </h4>\n                  <br />\n\n                  <Form layout=\"vertical\" hideRequiredMark onSubmit={this.onSubmit}>\n                    <Form.Item label=\"Email\">\n                      {form.getFieldDecorator('email', {\n                        initialValue: 'usman@gmail.com',\n                        rules: [\n                          {\n                            required: true,\n                            message: 'Please input your valid e-mail address',\n                            pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                          },\n                        ],\n                      })(<Input size=\"default\" />)}\n                    </Form.Item>\n                    <Form.Item label=\"Password\">\n                      {form.getFieldDecorator('password', {\n                        initialValue: '123456',\n                        rules: [\n                          {\n                            required: true,\n                            message: 'Please input your password (min:6)',\n                            min: 6,\n                          },\n                        ],\n                      })(<Input size=\"default\" type=\"password\" />)}\n                    </Form.Item>\n\n                    <div className=\"form-actions\">\n                      <Button type=\"primary\" className=\"width-150 mr-4\" htmlType=\"submit\">\n                        Next\n                      </Button>\n                      <span className=\"ml-3 register-link\">\n                        <Link to=\"/user/login\" className=\"text-primary utils__link--underlined\">\n                          Login\n                        </Link>{' '}\n                        if you have account\n                      </span>\n                    </div>\n                    {/* <div className=\"form-group\">\n                      <p>Use another service to Log In</p>\n                      <div className=\"mt-2\">\n                        <a href=\"javascript: void(0);\" className=\"btn btn-icon mr-2\">\n                          <i className=\"icmn-facebook\" />\n                        </a>\n                        <a href=\"javascript: void(0);\" className=\"btn btn-icon mr-2\">\n                          <i className=\"icmn-google\" />\n                        </a>\n                        <a href=\"javascript: void(0);\" className=\"btn btn-icon mr-2\">\n                          <i className=\"icmn-windows\" />\n                        </a>\n                        <a href=\"javascript: void(0);\" className=\"btn btn-icon mr-2\">\n                          <i className=\"icmn-twitter\" />\n                        </a>\n                      </div>\n                    </div> */}\n                  </Form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tempEP: state.user.tempEP,\n  }\n}\n\nexport default connect(mapStateToProps, { handleTempEP })(Register)\n"],"sourceRoot":""}